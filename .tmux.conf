# Create session on startup
new-session

set-option -g renumber-windows on


# Use M-s as prefix (save Ctrl for vim)
set -g prefix M-w

# Use M-: to enter command prompt
bind -n M-: command-prompt

# 0 is too far from ` ;)
set -g base-index 1

# Automatically set window title
set-window-option -g automatic-rename on
set-window-option -g xterm-keys on
set-option -g set-titles on

set-window-option -g aggressive-resize on

set -g default-terminal screen-256color
set -g status-keys vi
set -g history-limit 10000

# Set focused pane color
set -g window-style 'fg=colour242,bg=colour232'
set -g window-active-style 'fg=colour15,bg=colour0'

setw -g mode-keys vi
setw -g mouse on
setw -g monitor-activity on

bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
bind-key L swap-pane -D
bind-key H swap-pane -U

bind-key -n S-F9 resize-pane -L 5
bind-key -n S-F10 resize-pane -D 5
bind-key -n S-F11 resize-pane -U 5
bind-key -n S-F12 resize-pane -R 5

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-space key to enter command mode
bind -n M-Space copy-mode
# Use v to begin selection
bind-key -T copy-mode-vi 'v' send -X begin-selection

# Alt-p to go to last prompt (assuming prompt is $>$)
bind -n M-p copy-mode\; send -X search-backward '$>$'

# Use shift-number keys to choose layout
bind -n S-F5 select-layout main-vertical
bind -n S-F6 select-layout main-horizontal
bind -n S-F7 select-layout tiled
bind -n S-F8 select-layout even-horizontal

# Alt-# to choose window
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9

# w to create new window
bind w new-window -c '#{pane_current_path}'

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
#bind r source-file ~/.tmux.conf ; movew -r
bind & killw; movew -r
bind r movew -r
bind R source-file ~/.tmux.conf


# THEME
set -g status-bg black
set -g status-fg white
set -g window-status-format "#[fg=white,bg=black,nobold] #I #W "
set -g window-status-current-format "#[fg=black,bg=white,bold] #I #W "
set -g status-left-length 30
set -g status-left "#[fg=cyan]#(tmux display-message -p '#S') "
set -g status-right-length 30
# https://github.com/thewtex/tmux-mem-cpu-load/issues/53
set -g status-right '#[fg=green]#($TMUX_PLUGIN_MANAGER_PATH/tmux-mem-cpu-load/tmux-mem-cpu-load --colors --powerline-right --interval 2)#[default]'

bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel "xclip -sel clip -i"
#bind -n M-] run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
#bind -n M-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"
#bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# Clear screen and history buffer
bind -n M-c send-keys -R \; clear-history

# Send focus events
set -g focus-events on

set -g @continuum-restore 'on'
set -g @resurrect-strategy-vim 'session'
#set -g @resurrect-processes 'vim'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'thewtex/tmux-mem-cpu-load'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
